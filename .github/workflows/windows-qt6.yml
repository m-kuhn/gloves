---
name: ü™ü Windows Qt6
on:
  push:
    branches:
      - master
      - release-**
  pull_request:
  release:
    types: ['published']

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  packages: write

jobs:
  build:
    name: build (windows)
    runs-on: windows-2022

    steps:
      - name: üê£ Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: üê© Install CMake and Ninja
        uses: lukka/get-cmake@latest
        with:
          cmakeVersion: 3.29.2

      - name: üßΩ Developer Command Prompt for Microsoft Visual C++
        uses: ilammy/msvc-dev-cmd@v1
        with:
          # See https://github.com/actions/runner-images/issues/9398
          toolset: 14.39

      - name: üé° Setup vcpkg
        uses: ./.github/actions/setup-vcpkg

      - name: ü¶¨ Setup flex/bison
        uses: robinraju/release-downloader@v1.10
        with:
          repository: 'lexxmark/winflexbison'
          fileName: '*.zip'
          tag: 'v2.5.24'
          extract: true

      - name: üõçÔ∏è Setup ccache
        uses: hendrikmuhs/ccache-action@v1.2
        with:
          max-size: 1G

      - name: üå± Install dependencies and generate project files
        shell: bash
        run: |
          BUILD_DIR=$( cygpath "${{ github.workspace }}/build" )
          SOURCE_DIR=$( cygpath "${{ github.workspace }}" )

          cmake -S "${SOURCE_DIR}" \
                -B "${BUILD_DIR}" \
                -G Ninja \
                -D CMAKE_BUILD_TYPE=Release \
                -D WITH_VCPKG=ON \
                -D CREATE_ZIP=ON \
                -D VCPKG_TARGET_TRIPLET=x64-windows-release \
                -D VCPKG_HOST_TRIPLET=x64-windows-release \
                -D WITH_DESKTOP=ON \
                -D WITH_3D=ON \
                -D WITH_BINDINGS=ON \
                -D ENABLE_TESTS=OFF \
                -D BUILD_WITH_QT6=ON \
                -D USE_CCACHE=ON \
                -D FLEX_EXECUTABLE="${SOURCE_DIR}/win_flex.exe" \
                -D BISON_EXECUTABLE="${SOURCE_DIR}/win_bison.exe" \
                -D SIP_BUILD_EXECUTABLE="${BUILD_DIR}\vcpkg_installed\x64-windows-release\tools\python3\Scripts\sip-build.exe" \
                -D PYUIC_PROGRAM="${BUILD_DIR}\vcpkg_installed\x64-windows-release\tools\python3\pyuic5.bat" \
                -D PYRCC_PROGRAM="${BUILD_DIR}\vcpkg_installed\x64-windows-release\tools\python3\pyrcc5.bat" \
                -D CMAKE_C_COMPILER_LAUNCHER=ccache \
                -D CMAKE_CXX_COMPILER_LAUNCHER=ccache \
                -D WITH_QTWEBKIT=OFF \
                -D VCPKG_INSTALL_OPTIONS="--x-buildtrees-root=C:/src" \
                -D NUGET_USERNAME=${{ github.actor }} \
                -D NUGET_TOKEN=${{ secrets.GITHUB_TOKEN }}

      - name: üåã Build
        shell: bash
        run: |
          cmake --build "${{ github.workspace }}/build" --config Release

      - name: üì¶ Package
        shell: bash
        run: |
          cmake --build "${{ github.workspace }}/build" --target bundle --config Release

      - name: üìë Upload dep build logs
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: build-logs-x64-windows
          path: |
            C:/src/**/*.log


      - name: üî© Save PR number to zip
        run: |
          echo ${{ github.event.number }} | tee pr_number
          zip -u build/*-win64.zip pr_number
          echo ${{ github.event.pull_request.head.sha }} | tee git_commit
          zip -u build/*-win64.zip git_commit

      - name: üì§ Upload bundle
        uses: actions/upload-artifact@v4
        with:
          name: qgis-windows-qt6
          path: |
            build/*-win64.zip
